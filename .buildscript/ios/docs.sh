#! /usr/bin/env bash

# abort on nonzero exitstatus
set -o errexit
# abort on unbound variable
set -o nounset
# don't hide errors within pipes
set -o pipefail
# trace what gets executed
set -o xtrace

readonly script_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
readonly program_name=$0

usage() {
    echo "usage: ${program_name} [-e --eject-to path]"
    echo "  -e eject-to path [optional] specify filesystem path to eject publishable documentation files to"
    echo "                   Default: temporary directory"
}

main() {
    local eject_to=$1
    local docs_zip="${eject_to}/docs.zip"
    source "$script_dir/../../samples/ios/CameraKitSample/.build"
    local gs_docs="gs://snapengine-builder-artifacts/camera-kit-ios-sdk/${CAMERA_KIT_COMMIT}/SDKs/CameraKit/.buildscript/build/docs.zip"
    gsutil cp "${gs_docs}" "${docs_zip}"

    unzip -q "${docs_zip}" -d "${eject_to}"
    # remove docc archives since we just want the static sites generated by jazzy
    rm -rf "${eject_to}/SCSDKCameraKitReferenceUI.doccarchive"
    rm -rf "${eject_to}/SCSDKCameraKitReferenceSwiftUI.doccarchive"
    rm -f "${docs_zip}"

    :
}

eject_to_directory=""

# Parse arguments
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
    -e | --ejecto-to)
        eject_to_directory="$2"
        shift
        shift
        ;;
    *)
        usage
        exit
        ;;
    esac
done

main "${eject_to_directory}"
